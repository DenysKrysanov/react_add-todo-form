{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","href","className","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUserById","usersFromServer","find","updatedTodos","userId","App","useState","setTodos","setTitle","userName","setUserName","isTitleError","setTitleError","isUserError","setUserError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","currentTodos","type","placeholder","value","onChange","input","target","trimStart","test","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f29801c.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a href={`mailto:${email}`} className=\"UserInfo\">\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <li\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </li>\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </ul>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { ChangeEvent, FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport './App.scss';\n\nfunction getUserById(id: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === id);\n\n  return foundUser || null;\n}\n\nconst updatedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(updatedTodos);\n  const [title, setTitle] = useState('');\n  const [userName, setUserName] = useState(0);\n\n  const [isTitleError, setTitleError] = useState(false);\n  const [isUserError, setUserError] = useState(false);\n\n  const resetForm = () => {\n    setTitle('');\n    setUserName(0);\n  };\n\n  const createNewTodoId = () => (\n    Math.max(...todos.map(todo => todo.id)) + 1\n  );\n\n  const handleTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    const regex = /^[a-zA-Zа-яА-Я0-9\\s]*$/;\n    const input = event.target.value.trimStart();\n\n    if (regex.test(input)) {\n      setTitle(input);\n      setTitleError(false);\n    } else {\n      setTitleError(true);\n    }\n  };\n\n  const handleUser = (event: ChangeEvent<HTMLSelectElement>) => {\n    setUserName(Number(event.target.value));\n    setUserError(false);\n  };\n\n  const handleFormSubmit = (event: FormEvent<HTMLFormElement>) => {\n    const user = getUserById(userName);\n\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserError(!userName);\n\n    const newTodo: Todo = {\n      id: createNewTodoId(),\n      userId: userName,\n      title,\n      completed: false,\n      user,\n    };\n\n    if (title && userName) {\n      setTodos(currentTodos => [...currentTodos, newTodo]);\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n\n            <input\n              type=\"text\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitle}\n              data-cy=\"titleInput\"\n            />\n          </label>\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n\n            <select\n              value={userName}\n              onChange={handleUser}\n              data-cy=\"userSelect\"\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}